{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contactsSlicer.js","components/services/localStorage.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","contactSlice","createSlice","name","initialState","items","id","number","filter","reducers","setContacts","state","action","payload","addContacts","deleteContacts","contact","filterContacts","actions","save","key","value","localStorage","setItem","JSON","stringify","error","ContactForm","onSubmit","useState","setName","setNumber","onChangeHandler","e","target","preventDefault","className","s","form","label","type","pattern","title","onChange","input","required","button","ContactList","onDeleteContacts","list","map","item","text","onClick","Filter","wrapper","App","contacts","useSelector","dispatch","useDispatch","useEffect","localContacts","parse","getItem","storage","section","contactToAdd","nanoid","some","toLowerCase","alert","normalizedFilter","includes","flterContacts","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b8dbcac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__zArsO\",\"label\":\"Filter_label__1PT2X\",\"input\":\"Filter_input__3Ib8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1gsel\",\"title\":\"App_title__35tGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ZXAn\",\"label\":\"ContactForm_label__oE46v\",\"input\":\"ContactForm_input__2D6aP\",\"button\":\"ContactForm_button__2d4bo\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  items: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  filter: '',\r\n};\r\n\r\nconst contactSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  reducers: {\r\n    setContacts: (state, action) => ({ ...state, items: action.payload }),\r\n    addContacts: (state, action) => ({\r\n      ...state,\r\n      items: [action.payload, ...state.items],\r\n    }),\r\n    deleteContacts: (state, action) => ({\r\n      ...state,\r\n      items: state.items.filter(contact => contact.id !== action.payload),\r\n    }),\r\n    filterContacts: (state, action) => ({\r\n      ...state,\r\n      filter: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { setContacts, addContacts, deleteContacts, filterContacts } =\r\n  contactSlice.actions;\r\n\r\nexport default contactSlice.reducer;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport s from './ContactForm.module.css'\r\n\r\nconst ContactForm = ({onSubmit}) => {\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n\r\n  const onChangeHandler = e => {\r\n    const { name, value } = e.target;\r\n    \r\n    switch (name) {\r\n      case \"name\":\r\n        setName( value );\r\n        break;\r\n    \r\n      case \"number\":\r\n        setNumber( value );\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n    \r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n    return (\r\n      <form onSubmit={submitHandler} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input  \r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            onChange={onChangeHandler}\r\n            className={s.input}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input        \r\n            name=\"number\"\r\n            type=\"tel\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            onChange={onChangeHandler}\r\n            className={s.input}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}> Add contact</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nexport const ContactList = ({ filterContacts, onDeleteContacts }) => {\r\n    return (\r\n        <ul className={s.list}>\r\n            {filterContacts.map(contact => (\r\n                <li key={contact.id} className={s.item}>\r\n                    <p className={s.text}>{contact.name}: {contact.number} </p>\r\n                    <button type=\"button\" onClick={() => onDeleteContacts(contact.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContacts: PropTypes.array,\r\n  onDeleteContacts: PropTypes.func,\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <div className={s.wrapper}>\r\n    <label className={s.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className={s.input}\r\n    ></input>\r\n  </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import actions from './redux/contacts/contactsSlicer';\nimport * as actions from './redux/contacts/contactsSlicer';\nimport { nanoid } from 'nanoid';\nimport * as storage from './components/services/localStorage';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nimport s from './App.module.css';\nimport { addContacts } from './redux/contacts/contactsSlicer';\n\nconst App = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const localContacts = storage.get('contacts');\n    if (localContacts) {\n      dispatch(actions.setContacts(localContacts));\n    } else {\n      storage.save('contacts', contacts);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    storage.save('contacts', contacts);\n  }, [contacts]);\n\n  const submitHandler = ({ name, number }) => {\n    const contactToAdd = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(\n        contact =>\n          contact.name.toLowerCase() === contactToAdd.name.toLowerCase(),\n      )\n    ) {\n      return alert(`${contactToAdd.name} is already in contacts!`);\n    } else {\n      dispatch(actions.addContacts(contactToAdd));\n    }\n  };\n\n  const flterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  const onChangeFilter = e => dispatch(actions.filterContacts(e.target.value));\n\n  const deleteContact = id => {\n    dispatch(actions.deleteContacts(id));\n  };\n\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={submitHandler} />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter onChange={onChangeFilter} value={filter} />\n      <ContactList\n        filterContacts={flterContacts()}\n        onDeleteContacts={deleteContact}\n      />\n    </section>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contacts/contactsSlicer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2xj1c\",\"item\":\"ContactList_item__3LYYd\"};"],"sourceRoot":""}